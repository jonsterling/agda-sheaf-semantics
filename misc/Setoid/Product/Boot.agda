module Setoid.Product.Boot where

open import Agda.Primitive
import Setoid.Base as S
import Type as T

infixr 1 _РЄњРѓђрхЌ_
infixr 2 _РѕўрхЌ_

record _РЄњРѓђрхЌ_ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░}
  (A : S.t РёЊРѓђрхњ РёЊРѓђ╩░)
  (B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░)
    : Set ((РёЊРѓђрхњ Ріћ РёЊРѓђ╩░) Ріћ (РёЊРѓЂрхњ Ріћ РёЊРѓЂ╩░)) where
  infixr 1 _$Рѓђ_
  infixr 1 _$РѓЂ_
  field
    _$Рѓђ_ : S.t.obj A T.╬а.РЄњРѓђ S.t.obj B
    _$РѓЂ_ : Рѕђ {a b} Рєњ S.t.hom A (a T.Рѕљ., b) T.╬а.РЄњРѓђ S.t.hom B (_$Рѓђ_ a T.Рѕљ., _$Рѓђ_ b)
open _РЄњРѓђрхЌ_ public

idnрхЌ
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░}
  Рєњ T.­ЮЪЎ.t T.╬а.РЄњРѓђ (A РЄњРѓђрхЌ A)
idnрхЌ T.­ЮЪЎ.* = record
  { _$Рѓђ_ = T.╬а.idn
  ; _$РѓЂ_ = T.╬а.idn
  }

cmpрхЌ
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░ РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░}
  Рєњ {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ {C : S.t РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ (B РЄњРѓђрхЌ C) T.Рѕљ.├Ќ (A РЄњРѓђрхЌ B) T.╬а.РЄњРѓђ (A РЄњРѓђрхЌ C)
cmpрхЌ (G T.Рѕљ., F) = record
  { _$Рѓђ_ = (G $Рѓђ_) T.╬а.Рѕў (F $Рѓђ_)
  ; _$РѓЂ_ = (G $РѓЂ_) T.╬а.Рѕў (F $РѓЂ_)
  }

_РѕўрхЌ_
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░ РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░}
  Рєњ {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ {C : S.t РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ (B РЄњРѓђрхЌ C) T.╬а.РЄњРѓђ (A РЄњРѓђрхЌ B) T.╬а.РЄњРѓђ (A РЄњРѓђрхЌ C)
_РѕўрхЌ_ G F = cmpрхЌ (G T.Рѕљ., F)
