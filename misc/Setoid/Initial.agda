module Setoid.Initial where

open import Agda.Primitive
import Setoid.Base as S
import Setoid.Product as ╬а
import Type as T

s : S.t lzero lzero
s = record
  { obj = T.­ЮЪў.t
  ; hom = ╬╗ {(() T.Рѕљ., ¤ђРѓЂ)}
  ; idn = ╬╗ {}
  ; cmp = ╬╗ {}
  ; inv = ╬╗ {}
  }

┬А : Рѕђ ..{РёЊрхњ РёЊ╩░} {A : S.t РёЊрхњ РёЊ╩░} Рєњ s ╬а.РЄњРѓђрхЌ A
┬А = record
  { _$Рѓђ_ = ╬╗ ()
  ; _$РѓЂ_ = ╬╗ {}
  }

┬г_ : Рѕђ ..{РёЊрхњ РёЊ╩░} (A : S.t РёЊрхњ РёЊ╩░) Рєњ Set (РёЊрхњ Ріћ РёЊ╩░)
┬г A = A ╬а.РЄњРѓђрхЌ s
