module Setoid.Product where

open import Agda.Primitive
import Setoid.Base as S
open import Setoid.Coproduct as Рѕљ
open import Setoid.Product.Boot public
import Setoid.Homotopy as Homo
import Setoid.Terminal as ­ЮЪЎ
import Type as T

_РЄњРѓђ╦б_ : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ (A : S.t РёЊРѓђрхњ РёЊРѓђ╩░)
  Рєњ (B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░)
  Рєњ S.t _ _
_РЄњРѓђ╦б_ A B = record
  { obj = A РЄњРѓђрхЌ B
  ; hom = ╬╗ {(F T.Рѕљ., G) Рєњ F Homo.РЄњРѓЂ G}
  ; idn = Homo.idn _
  ; cmp = Homo.cmp
  ; inv = Homo.inv
  }

private
  idnрхЌ
    : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░}
    Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░}
    Рєњ T.­ЮЪЎ.t T.╬а.РЄњРѓђ (A РЄњРѓђрхЌ A)
  idnрхЌ T.­ЮЪЎ.* = record
    { _$Рѓђ_ = T.╬а.id
    ; _$РѓЂ_ = T.╬а.id
    }

  cmpрхЌ
    : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░ РёЊРѓѓрхњ РёЊРѓѓ╩░}
    Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░}
    Рєњ {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░}
    Рєњ {C : S.t РёЊРѓѓрхњ РёЊРѓѓ╩░}
    Рєњ (B РЄњРѓђрхЌ C) T.Рѕљ.├Ќ (A РЄњРѓђрхЌ B) T.╬а.РЄњРѓђ (A РЄњРѓђрхЌ C)
  cmpрхЌ (G T.Рѕљ., F) = record
    { _$Рѓђ_ = (G $Рѓђ_) T.╬а.Рѕў (F $Рѓђ_)
    ; _$РѓЂ_ = (G $РѓЂ_) T.╬а.Рѕў (F $РѓЂ_)
    }

idn
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░}
  Рєњ ­ЮЪЎ.s РЄњРѓђрхЌ (A РЄњРѓђ╦б A)
idn = record
  { _$Рѓђ_ = idnрхЌ
  ; _$РѓЂ_ = Homo.idn _
  }

cmp
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░ РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░}
  Рєњ {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ {C : S.t РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ ((B РЄњРѓђ╦б C) Рѕљ.├Ќ (A РЄњРѓђ╦б B)) РЄњРѓђрхЌ (A РЄњРѓђ╦б C)
cmp {A = A} {B = B} {C = C} = record
  { _$Рѓђ_ = cmpрхЌ
  ; _$РѓЂ_ = ╬╗ { {GРѓђ T.Рѕљ., FРѓђ} {GРѓЂ T.Рѕљ., FРѓЂ} (╬▓ T.Рѕљ., ╬▒) Рєњ
      record { -- FIXME
        com = ╬╗ {a} Рєњ S.cmp C (Homo.com ╬▓ T.Рѕљ., GРѓђ $РѓЂ Homo.com ╬▒)
      }
    }
  }

