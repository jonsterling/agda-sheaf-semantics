module Setoid.Product where

open import Agda.Primitive
import Setoid.Base as S
open import Setoid.Coproduct.Boot as Рѕљ
open import Setoid.Product.Boot public
import Setoid.Homotopy as Homo
import Setoid.Terminal as ­ЮЪЎ
import Type as T

infixr 2 _РЄњРѓђ╦б_

_РЄњРѓђ╦б_ : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ (A : S.t РёЊРѓђрхњ РёЊРѓђ╩░)
  Рєњ (B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░)
  Рєњ S.t _ _
_РЄњРѓђ╦б_ A B = record
  { obj = A РЄњРѓђрхЌ B
  ; hom = ╬╗ {(F T.Рѕљ., G) Рєњ F Homo.РЄњРѓЂ G}
  ; idn = Homo.idn _
  ; cmp = Homo.cmp
  ; inv = Homo.inv
  }

idn
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░}
  Рєњ ­ЮЪЎ.s РЄњРѓђрхЌ (A РЄњРѓђ╦б A)
idn = record
  { _$Рѓђ_ = idnрхЌ
  ; _$РѓЂ_ = Homo.idn _
  }

cmp
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░ РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░}
  Рєњ {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ {C : S.t РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ (B РЄњРѓђ╦б C) Рѕљ.├Ќ (A РЄњРѓђ╦б B) РЄњРѓђрхЌ (A РЄњРѓђ╦б C)
cmp {C = C} = record
  { _$Рѓђ_ = cmpрхЌ
  ; _$РѓЂ_ = Homo.cmp-hРѓЂ
  }
