module Setoid.Product where

open import Agda.Primitive
import Setoid.Base as S
open import Setoid.Product.Boot public
import Setoid.Homotopy as Homo
import Type as T

s : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ (A : S.t РёЊРѓђрхњ РёЊРѓђ╩░)
  Рєњ (B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░)
  Рєњ S.t _ _
s A B = record
  { obj = A РЄњРѓђ B
  ; hom = ╬╗ {(F T.Рѕљ., G) Рєњ F Homo.РЄњРѓЂ G}
  ; idn = Homo.idn _
  ; cmp = Homo.cmp
  ; inv = Homo.inv
  }

idn
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░}
  Рєњ {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ T.­ЮЪЎ.t T.╬а.РЄњРѓђ (A РЄњРѓђ A)
idn T.­ЮЪЎ.* = record
  { _$Рѓђ_ = T.╬а.id
  ; _$РѓЂ_ = T.╬а.id
  }

cmp
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░ РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░}
  Рєњ {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ {C : S.t РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ (B РЄњРѓђ C) T.Рѕљ.├Ќ (A РЄњРѓђ B) T.╬а.РЄњРѓђ (A РЄњРѓђ C)
cmp (G T.Рѕљ., F) = record
  { _$Рѓђ_ = (G $Рѓђ_) T.╬а.Рѕў (F $Рѓђ_)
  ; _$РѓЂ_ = (G $РѓЂ_) T.╬а.Рѕў (F $РѓЂ_)
  }
